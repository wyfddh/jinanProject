package com.tj720.controller;

import com.tj720.controller.framework.JsonResult;
import com.tj720.controller.framework.auth.AuthPassport;
import com.tj720.model.EsalePersonDiary;
import com.tj720.service.EsalePersonDiaryService;
import com.tj720.utils.Page;
import com.tj720.utils.Tools;
import net.sf.json.JSONObject;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller
@RequestMapping("/personDiary")
public class EsalePersonDiaryController {
	@Autowired
	private EsalePersonDiaryService esalePersonDiaryService;

	/**
	 *
	 * 功能描述: 获取个人日记列表
	 *
	 * @param: [personDiary, currentPage, size]
	 * @return: com.tj720.controller.framework.JsonResult
	 * @auther: caiming
	 * @date: 2018/11/30 14:06
	 */
	@RequestMapping("getPersonDiaryList")
	@ResponseBody
	@AuthPassport
	public JsonResult getPersonDiaryList(EsalePersonDiary personDiary,
									   @RequestParam(defaultValue = "1") Integer currentPage, @RequestParam(defaultValue = "10") Integer size) throws Exception {
		String userId = Tools.getUserId();
		personDiary.setCreator(userId);

		Page page = new Page();
		page.setSize(size);
		page.setCurrentPage(currentPage);

		if(StringUtils.isNotBlank(personDiary.getShowDate())){
			String showDate = personDiary.getShowDate();
			String[] split = showDate.split(" - ");
			if(split.length == 2){
				personDiary.setStartDate(split[0]);
				personDiary.setEndDate(split[1]);
			}
		}
		return esalePersonDiaryService.getList(personDiary, page);
	}

	/**
	 * @Author 刘修
	 * @Description 查询活动列表
	 * @return
	 */
	@RequestMapping("addOrUpdate")
	@ResponseBody
	@AuthPassport
	public JsonResult addOrUpdate(String id, String content) throws Exception {
		EsalePersonDiary personDiary = new EsalePersonDiary();
		personDiary.setId(id);
		personDiary.setContent(content);
		return esalePersonDiaryService.insertOrUpdate(personDiary);
	}
	/**
	 *
	 * 功能描述: 获取日记管理列表
	 *
	 * @param: [personDiary, currentPage, size]
	 * @return: net.sf.json.JSONObject
	 * @auther: caiming
	 * @date: 2018/11/30 14:12
	 */
	@RequestMapping("getDiaryList")
	@ResponseBody
	@AuthPassport
	public JSONObject getDiaryList(EsalePersonDiary personDiary,
								   @RequestParam(defaultValue = "1") Integer currentPage, @RequestParam(defaultValue = "10") Integer size) throws Exception {
		Page page = new Page();
		page.setSize(size);
		page.setCurrentPage(currentPage);

		if(StringUtils.isNotBlank(personDiary.getShowDate())){
			String showDate = personDiary.getShowDate();
			String[] split = showDate.split(" - ");
			if(split.length == 2){
				personDiary.setStartDate(split[0]);
				personDiary.setEndDate(split[1]);
			}
		}
		if(StringUtils.isNotBlank(personDiary.getOrgid()) && "null".equals(personDiary.getOrgid()) ){
			personDiary.setOrgid(null);
		}
		return esalePersonDiaryService.getDiaryList(personDiary, page);
	}

	@RequestMapping("deleteDiary")
	@ResponseBody
	@AuthPassport
	public JsonResult deleteDiary(String id) throws Exception {
		return esalePersonDiaryService.deleteDiary(id);
	}

	@RequestMapping("getDiaryById")
	@ResponseBody
	@AuthPassport
	public JsonResult getDiaryById(String id) throws Exception {
		return esalePersonDiaryService.getDiaryById(id);
	}

}
