<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tj720.dao.SysDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.tj720.model.common.wf.SysDepartment" >
    <id column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="department_level" property="departmentLevel" jdbcType="VARCHAR" />
    <result column="department_code" property="departmentCode" jdbcType="VARCHAR" />
    <result column="job_description" property="jobDescription" jdbcType="VARCHAR" />
    <result column="user_amount" property="userAmount" jdbcType="VARCHAR" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="other1" property="other1" jdbcType="VARCHAR" />
    <result column="other2" property="other2" jdbcType="VARCHAR" />
    <result column="other3" property="other3" jdbcType="VARCHAR" />
  </resultMap>



  <sql id="Department_List">
    department_id, parent_id, department_name, department_level, department_code, job_description, user_amount,
    sequence, status, create_time, isdelete, other1, other2, other3
  </sql>



  <select id="getAllDeptList" resultType="com.tj720.model.common.video.MenuTreeDto">
    select
    department_id as id, parent_id  as pid, department_name as functionname
    from sys_department
  </select>



  <select id="departmentList"  resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Department_List" />
    from sys_department
    <where>
      <if test="createTime != null and createTime != ''">order by create_time desc </if>
      <!--<if test="status != null and status != ''">and status </if>
      <if test="isdelete != null ">and isdelete </if>-->
    </where>
    <if test="start != null and end != null">
      limit #{start},#{end}
    </if>

  </select>


  <select id="count" resultType="int">
    select count(*) from sys_department
    <where>
      <if test="createTime != null and createTime != ''">order by create_time desc </if>
    </where>
  </select>

  <select id="getChildCount" parameterType="java.lang.String" resultType="int">
		SELECT count(*) from sys_department
		 where parent_id= #{departmentId}
	</select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    d.department_id, d.parent_id, e.department_name as partment_name, d.department_name,
    d.department_level, d.job_description, d.user_amount,
    d.sequence, d.status, d.create_time, d.isdelete, d.other1, d.other2, d.other3
    from sys_department d
    left join sys_department e
    on d.parent_id=e.department_id
    where d.department_id = #{departmentId}
  </select>


    <select id="getDeptById"  resultMap="BaseResultMap" parameterType="java.lang.String">
        select
            a.*
        from
            sys_department a,
            sys_user_dept b
        where
            a.department_id = b.dept_id
        and b.user_id = #{userId}
        limit 1
    </select>



  <select id="getDeptOptions"  resultMap="BaseResultMap" >
		select  department_id ,department_name  from sys_department where status=1
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_department
    where department_id = #{departmentId}
  </delete>

  <insert id="insertSelective" parameterType="com.tj720.model.common.wf.SysDepartment">
    insert sys_department(
      department_id,
      parent_id,
      department_name,
      department_level,
      department_code,
      job_description,
      user_amount,
      sequence,
      status,
      isdelete
    )values(
      #{departmentId},
      #{parentId},
      #{departmentName},
      #{departmentLevel},
      #{departmentCode},
      #{jobDescription},
      #{userAmount},
      #{sequence},
      #{status},
      #{isdelete}
  )
</insert>



  <update id="updateByPrimaryKeySelective" parameterType="com.tj720.model.common.wf.SysDepartment">
    update  
    <set>
      parent_id = #{parentId},
      department_name = #{departmentName},
      department_level = #{departmentLevel},
      department_code = #{departmentCode},
      job_description = #{jobDescription},
      user_amount = #{userAmount},
      sequence = #{sequence},
      status = #{status},
      isdelete = #{isdelete}
    </set>
    where 1=1
    <if test="departmentId != null and departmentId != '' ">and department_id = #{departmentId}</if>
  </update>



  <update id="updateDeptStatus">
    update sys_department
    <set>
      <if test="status != null and status != ''">status = #{status}</if>
    </set>
    where 1=1
    <if test="departmentId != null and departmentId != '' ">and department_id = #{departmentId}</if>
  </update>


  <select id="countByNameAndParentId" parameterType="map" resultType="int">
    SELECT count(1)
    FROM sys_department
    WHERE department_name = #{departmentName}
    <if test="parentId != null and parentId != '' ">
      AND parent_id = #{parentId}
    </if>
    <if test="departmentId!= null">
      AND department_id != #{departmentId}
    </if>
  </select>

  <!--获取所有部门信息-->
  <select id="getAllOrgInfo" resultMap="BaseResultMap">
    select * from sys_department
  </select>

  <!--11-->
</mapper>